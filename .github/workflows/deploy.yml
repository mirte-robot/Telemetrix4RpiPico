name: Deploy new version

# Only deploy when a new tag is pushed
on: [push, pull_request]
          
# Must match the project() name in CMakeLists.txt
env:
    APP_NAME: Telemetrix4RpiPico
    
# Allow this workflow to write back to the repository
permissions:
    contents: write
    
# Build binary and send to releases
jobs:
    build-deploy:
        runs-on: ubuntu-latest
        name: Build and deploy
        container: ghcr.io/arendjan/pico_docker_image:main
        steps:
          - uses: actions/checkout@main
            with:
              submodules: true
          - name: build
            run: |
              chmod +x build.sh
              ./build.sh
          - name: Copy uf2 file
            run: |
              cp ./build2/Telemetrix4RpiPico.uf2 ./
              cp ./build2/Telemetrix4RpiPico.elf ./
          - name: install nodejs
            run: |
                apt update
                apt install curl unzip -y
                curl -fsSL https://deb.nodesource.com/setup_20.x -o nodesource_setup.sh
                chmod +x nodesource_setup.sh
                ./nodesource_setup.sh
                apt-get install -y nodejs
                node -v
          - name: Put environment variable into the env context
            run: echo "app_name=$APP_NAME" >> $GITHUB_ENV
          - name: Archive production artifacts
            uses: actions/upload-artifact@v4
            with:
              name: dist
              path: |
                Telemetrix4RpiPico.uf2
                Telemetrix4RpiPico.elf
        
          # - name: Push to release
          #   uses: softprops/action-gh-release@v1
          #   if: startsWith(github.ref, 'refs/tags/')
          #   with:
          #       files: Telemetrix4RpiPico.uf2
    upload_private_server:
      needs: [build-deploy] # 
      runs-on: ubuntu-latest
      if: github.event_name == 'push'
      steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Extract branch name
              shell: bash
              run: |
                echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
                echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
              id: extract_branch
            - name: Download artifact
              id: download
              uses: actions/download-artifact@v4
              with:
                path: upload

            - name: List artifact
              run: |
                ls ${{ github.workspace }}
                mkdir -p ${{ github.workspace }}/upload/mirte
                ls ${{ github.workspace }}/upload
                tree ${{ github.workspace }}/upload
                # for every file ending in .img.xz, remove last part of the path
                for file in $(find ${{ github.workspace }}/upload/ -name '*.uf2'); do
                    f=$(basename $file)
                    echo $f
                    mv $file ${{ github.workspace }}/upload/mirte/"${f}"
                done
            - name: Upload to private server
              run: |
                sudo apt update
                sudo apt install sshpass
                mkdir -p ~/.ssh
                ssh-keyscan arend-jan.com >> ~/.ssh/known_hosts
                export SSHPASS=${{ secrets.MIRTEFILES }}
                sshpass -e sftp mirtefiles@arend-jan.com << ASDF
                    rm files/telemetrix/${{ steps.extract_branch.outputs.branch }}_old/*
                    rmdir files/telemetrix/${{ steps.extract_branch.outputs.branch }}_old
                    rename files/telemetrix/${{ steps.extract_branch.outputs.branch }} files/telemetrix/${{ steps.extract_branch.outputs.branch }}_old
                    mkdir files/telemetrix/${{ steps.extract_branch.outputs.branch }}
                    ! touch uploading.txt
                    put uploading.txt files/telemetrix/${{ steps.extract_branch.outputs.branch }}/uploading.txt
                    put upload/mirte/* /files/telemetrix/${{ steps.extract_branch.outputs.branch }}/
                    rm files/telemetrix/${{ steps.extract_branch.outputs.branch }}/uploading.txt
                    bye
                ASDF